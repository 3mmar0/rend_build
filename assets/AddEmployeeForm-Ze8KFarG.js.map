{"version":3,"file":"AddEmployeeForm-Ze8KFarG.js","sources":["../../src/features/humanResources/components/addEmployee/DocumentUpload.tsx","../../src/components/icons/SmallUploadImgIcon.tsx","../../src/components/forms/SmallImgInputForm.tsx","../../src/features/humanResources/forms/addEmployee/PersonalInfo.tsx","../../src/components/forms/YearSelectForm.tsx","../../src/features/humanResources/forms/addEmployee/Experience.tsx","../../src/features/humanResources/forms/addEmployee/JobData.tsx","../../src/features/humanResources/forms/schemas/addEmployee/add-employee-schema.ts","../../src/features/humanResources/forms/addEmployee/Submission.tsx","../../src/features/humanResources/forms/addEmployee/AddEmployeeForm.tsx"],"sourcesContent":["import { useDropzone } from 'react-dropzone';\r\nimport { SecondaryButton } from '@/components/buttons/SecondaryButton';\r\nimport ImportIcon from '@/components/icons/file/ImportIcon';\r\n\r\nexport default function DocumentsSection() {\r\n    // Handle file drop\r\n    const onDrop = (acceptedFiles: File[]) => {\r\n        const file = acceptedFiles[0];\r\n    };\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({\r\n        onDrop,\r\n        multiple: false,\r\n        maxSize: 10 * 1024 * 1024, // 10MB\r\n    });\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-1\">\r\n            <div {...getRootProps()}>\r\n                <input {...getInputProps()} />\r\n                <SecondaryButton className=\"py-[10px]\" type=\"button\">\r\n                    <ImportIcon />\r\n                    استيراد ملف بيانات\r\n                </SecondaryButton>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","interface IconProps {\r\n    width?: string;\r\n    height?: string;\r\n    className?: string;\r\n}\r\n\r\nconst SmallUploadImgIcon = ({ width = '33', height = '32', className = '' }: IconProps) => {\r\n    return (\r\n        <span className={className}>\r\n            <svg width={width} height={height} viewBox=\"0 0 33 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                    d=\"M12.4999 13.3333C13.9727 13.3333 15.1666 12.1394 15.1666 10.6667C15.1666 9.19391 13.9727 8 12.4999 8C11.0272 8 9.83325 9.19391 9.83325 10.6667C9.83325 12.1394 11.0272 13.3333 12.4999 13.3333Z\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"1.5\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                />\r\n                <path\r\n                    d=\"M17.8334 2.6665H12.5001C5.83341 2.6665 3.16675 5.33317 3.16675 11.9998V19.9998C3.16675 26.6665 5.83341 29.3332 12.5001 29.3332H20.5001C27.1667 29.3332 29.8334 26.6665 29.8334 19.9998V13.3332\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"1.5\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                />\r\n                <path d=\"M21.5 6.6665H28.8333\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\r\n                <path d=\"M25.1667 10.3333V3\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\r\n                <path\r\n                    d=\"M4.06006 25.2666L10.6334 20.8532C11.6867 20.1466 13.2067 20.2266 14.1534 21.0399L14.5934 21.4266C15.6334 22.3199 17.3134 22.3199 18.3534 21.4266L23.9001 16.6666C24.9401 15.7732 26.6201 15.7732 27.6601 16.6666L29.8334 18.5332\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"1.5\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                />\r\n            </svg>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default SmallUploadImgIcon;\r\n","import { useFormContext } from 'react-hook-form';\r\nimport { FormField, FormItem, FormLabel, FormControl, FormMessage } from '@/components/ui/form';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { SecondaryButton } from '@/components/buttons/SecondaryButton';\r\nimport UploadImgIcon from '@/components/icons/UploadImgIcon';\r\nimport { useEffect, useState } from 'react';\r\nimport removeDuplicates from '@/utils/removeDuplicated';\r\nimport SmallUploadImgIcon from '../icons/SmallUploadImgIcon';\r\n\r\ninterface Props {\r\n    className?: string;\r\n    name: string;\r\n    label?: string;\r\n    multiple: boolean;\r\n    maxSize: number;\r\n    editImages?: string[] | string;\r\n}\r\n\r\nconst SmallImgInputForm = ({ className, name, label, maxSize, multiple, editImages }: Props) => {\r\n    const { control, setValue, watch, getValues } = useFormContext();\r\n    const [imgPreviews, setImgPreviews] = useState<string[]>([]);\r\n\r\n    const removeImage = (index: number) => {\r\n        const currentFiles = getValues(name);\r\n        const newFiles = Array.isArray(currentFiles) ? currentFiles.filter((_, i) => i !== index) : [];\r\n\r\n        setValue(name, newFiles, { shouldValidate: true });\r\n\r\n        setImgPreviews((prev) => {\r\n            const newPreviews = prev.filter((_, i) => {\r\n                if (i === index) {\r\n                    URL.revokeObjectURL(prev[i]);\r\n                }\r\n                return i !== index;\r\n            });\r\n            return newPreviews;\r\n        });\r\n    };\r\n\r\n    const onDrop = (acceptedFiles: File[], name: string) => {\r\n        if (multiple && editImages) {\r\n            // Get current files from form value\r\n            const currentValue = getValues(name);\r\n            const existingFiles = Array.isArray(currentValue) ? currentValue : [];\r\n            // Merge existing files with new accepted files\r\n            const combinedFiles = [...existingFiles, ...acceptedFiles];\r\n            setValue(name, removeDuplicates(combinedFiles), { shouldValidate: true });\r\n            // Generate previews for new files and append\r\n            const newPreviews = acceptedFiles.map((file) => URL.createObjectURL(file));\r\n            setImgPreviews((prev) => [...prev, ...newPreviews]);\r\n        } else {\r\n            setValue(name, multiple ? acceptedFiles : acceptedFiles[0], { shouldValidate: true });\r\n            setImgPreviews(acceptedFiles.map((file) => URL.createObjectURL(file)));\r\n        }\r\n    };\r\n\r\n    // Watch the form values for images\r\n    const images = watch(name);\r\n\r\n    // Reset previews when form values are cleared\r\n    useEffect(() => {\r\n        if (!images || images.length === 0) {\r\n            setImgPreviews([]);\r\n        }\r\n    }, [images]);\r\n\r\n    // initailly add editImages to react hook form state when edit\r\n    useEffect(() => {\r\n        if (editImages) {\r\n            setValue(name, editImages, { shouldValidate: true });\r\n            setImgPreviews(Array.isArray(editImages) ? editImages : [editImages]);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <FormField\r\n            control={control}\r\n            name={name}\r\n            render={({ field }) => (\r\n                <FormItem className={className}>\r\n                    <FormLabel className=\"text-primery-blue-900 font-medium text-[18px] leading-[33.73px] tracking-normal text-start\">\r\n                        {label}\r\n                    </FormLabel>\r\n                    <FormControl>\r\n                        <ImgFileUploader\r\n                            onDrop={(files: File[]) => onDrop(files, name)}\r\n                            acceptedFiles={field.value}\r\n                            previews={imgPreviews}\r\n                            maxSize={maxSize}\r\n                            multiple={multiple}\r\n                            removeImage={removeImage}\r\n                        />\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                </FormItem>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default SmallImgInputForm;\r\n\r\nfunction ImgFileUploader({ onDrop, previews, maxSize, multiple, removeImage }: any) {\r\n    const { getRootProps, getInputProps } = useDropzone({\r\n        onDrop,\r\n        accept: { 'image/*': [] },\r\n        multiple: multiple,\r\n        maxSize: maxSize,\r\n    });\r\n\r\n    return (\r\n        <div\r\n            {...getRootProps()}\r\n            className=\"border-2 border-dashed border-[#B6B5BF] rounded-lg p-2 text-center cursor-pointer\"\r\n        >\r\n            <input {...getInputProps()} />\r\n            <div>\r\n                <div className=\"flex flex-col gap-4 justify-center items-center\">\r\n                    <SmallUploadImgIcon className=\"text-[#90868C] \" />\r\n                    <div className=\"text-[#90868C] text-base leading-5 tracking-normal font-medium\">\r\n                        <SecondaryButton type=\"button\">اختر صورة</SecondaryButton>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex flex-row justify-center gap-2 mt-6 border-2 border-dashed border-[#B6B5BF] rounded-lg h-[60px]\">\r\n                    {previews?.map((preview: any, index: number) => (\r\n                        <div\r\n                            key={index}\r\n                            className=\"relative group flex flex-col items-center text-sm text-muted-foreground\"\r\n                        >\r\n                            {/* <SmallUploadImgIcon className=\"text-[#90868C]\" /> */}\r\n                            <img\r\n                                src={preview}\r\n                                alt={`Preview ${index + 1}`}\r\n                                className=\"w-20 h-[60px] object-cover rounded-md\"\r\n                            />\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    removeImage(index);\r\n                                }}\r\n                                className=\"absolute w-6 h-6 top-1 start-1 bg-red-error-600 text-white-blue-50 p-1 rounded-full text-xs opacity-0 group-hover:opacity-100 transition-opacity\"\r\n                            >\r\n                                ✕\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                {/* <div>\r\n                    <ul className=\"text-xs leading-[22.5px] font-medium tracking-normal text-start text-[#90868C] list-[square] marker:text-[8px] ps-5 mt-2\">\r\n                        <li>\r\n                            اقصى حجم <span className=\"font-bold ms-[2px]\">{maxSize / 1024 / 1024}MB</span>\r\n                        </li>\r\n                        <li>\r\n                            الملفات المسموح بها<span className=\"font-bold ms-[2px]\">jpeg , png , jpg, gif, svg</span>\r\n                        </li>\r\n                    </ul>\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { DateInputForm } from '@/components/forms/DateInputForm';\r\nimport SmallImgInputForm from '@/components/forms/SmallImgInputForm';\r\nimport TextInputForm from '@/components/forms/TextInputForm';\r\n\r\ninterface Props {\r\n    image: string | null | undefined;\r\n}\r\n\r\nexport default function PersonalInfo({ image }: Props) {\r\n    return (\r\n        <div className=\"mb-6 grid grid-cols-1 md:grid-cols-[1fr_1fr_164px] gap-6\">\r\n            <div>\r\n                <TextInputForm name=\"name\" label=\"اسم الموظف\" placeholder=\"ادخل اسم الموظف\" />\r\n                <TextInputForm name=\"id_number\" label=\"رقم الهوية\" placeholder=\"ادخل رقم الهوية\" />\r\n                <TextInputForm\r\n                    label=\"رقم الهاتف\"\r\n                    placeholder=\"ادخل رقم الهاتف\"\r\n                    className=\"[&>input]:text-end [&>input]:placeholder:text-end\"\r\n                    name=\"phone_number\"\r\n                    type=\"tel\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <TextInputForm name=\"address\" label=\"العنوان\" placeholder=\"ادخل العنوان\" />\r\n                <DateInputForm name=\"birth_date\" label=\"تاريخ الميلاد\" placeholder=\"ادخل تاريخ الميلاد\" />\r\n                <TextInputForm name=\"email\" label=\"البريد الالكتروني\" placeholder=\"ادخل البريد الالكتروني\" />\r\n            </div>\r\n            <div>\r\n                {image ? (\r\n                    <SmallImgInputForm\r\n                        name=\"personal_image\"\r\n                        maxSize={10 * 1024 * 1024}\r\n                        multiple={false}\r\n                        label=\"الصورة شخصية\"\r\n                        editImages={image}\r\n                    />\r\n                ) : (\r\n                    <SmallImgInputForm\r\n                        name=\"personal_image\"\r\n                        maxSize={10 * 1024 * 1024}\r\n                        multiple={false}\r\n                        label=\"الصورة شخصية\"\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { useFormContext } from 'react-hook-form';\r\nimport { FormField, FormItem, FormLabel, FormControl, FormMessage } from '@/components/ui/form';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport CalendarIcon from '../icons/CalendarIcon';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface Props {\r\n    className?: string;\r\n    name: string;\r\n    label?: string;\r\n    placeholder?: string;\r\n    data?: any;\r\n}\r\n\r\nexport default function YearSelectForm({ data, className, name, label, placeholder }: Props) {\r\n    const { control } = useFormContext();\r\n    return (\r\n        <FormField\r\n            control={control}\r\n            name={name}\r\n            render={({ field }) => (\r\n                <FormItem className={cn('flex flex-col justify-start', { className })}>\r\n                    <FormLabel className=\"text-primery-blue-900 font-medium text-[18px] leading-[33.73px] tracking-normal text-start\">\r\n                        {label}\r\n                    </FormLabel>\r\n                    <Select onValueChange={field.onChange} value={data && String(field.value)}>\r\n                        <FormControl>\r\n                            <SelectTrigger\r\n                                className=\"w-full text-black\"\r\n                                Icon={<CalendarIcon width=\"24\" height=\"24\" className=\"text-white-blue-600\" />}\r\n                            >\r\n                                <SelectValue placeholder={<span style={{ color: '#D1D1D1' }}>{placeholder}</span>} />\r\n                            </SelectTrigger>\r\n                        </FormControl>\r\n                        <SelectContent>\r\n                            {Array.from({ length: new Date().getFullYear() - 1900 + 1 }, (_, i) => 1900 + i).map(\r\n                                (y) => (\r\n                                    <SelectItem key={y} value={String(y)}>\r\n                                        {y}\r\n                                    </SelectItem>\r\n                                ),\r\n                            )}\r\n                        </SelectContent>\r\n                    </Select>\r\n                    <FormMessage />\r\n                </FormItem>\r\n            )}\r\n        />\r\n    );\r\n}\r\n","import SelectInputForm from '@/components/forms/SelectInputForm';\r\nimport SmallImgInputForm from '@/components/forms/SmallImgInputForm';\r\nimport TextInputForm from '@/components/forms/TextInputForm';\r\nimport YearSelectForm from '@/components/forms/YearSelectForm';\r\n\r\ninterface Props {\r\n    image: string | null | undefined;\r\n}\r\n\r\nexport default function Experience({ image }: Props) {\r\n    return (\r\n        <div className=\"mb-6 grid grid-cols-1 md:grid-cols-[1fr_1fr_164px] gap-6\">\r\n            <div>\r\n                <SelectInputForm\r\n                    name=\"education_degree\"\r\n                    label=\"درجة الشهادة\"\r\n                    options={[\r\n                        { value: 'high_school', name: 'الثانوية العامة' },\r\n                        { value: 'bachelor', name: 'بكالوريوس' },\r\n                        { value: 'master', name: 'ماجستير' },\r\n                        { value: 'phd', name: 'دكتوراه' },\r\n                    ]}\r\n                    placeholder=\"ادخل درجة الشهادة\"\r\n                />\r\n                <TextInputForm name=\"specialization\" label=\"التخصص\" placeholder=\"ادخل التخصص\" />\r\n                <TextInputForm name=\"previous_experience\" label=\"الخبرات السابقة\" placeholder=\"ادخل الخبارات السابقة\" />\r\n            </div>\r\n            <div>\r\n                <TextInputForm name=\"university\" label=\"الجامعة\" placeholder=\"ادخل اسم الجامعة\" />\r\n                <YearSelectForm name=\"graduation_year\" data={true} label=\"سنة التخرج\" placeholder=\"اختر سنة التخرج\" />\r\n                <TextInputForm name=\"skills\" label=\"المهارات\" placeholder=\"ادخل المهارات\" />\r\n            </div>\r\n            <div>\r\n                {image ? (\r\n                    <SmallImgInputForm\r\n                        name=\"degree_certificate\"\r\n                        maxSize={10 * 1024 * 1024}\r\n                        multiple={false}\r\n                        label=\"الشهادات\"\r\n                        editImages={image}\r\n                    />\r\n                ) : (\r\n                    <SmallImgInputForm\r\n                        name=\"degree_certificate\"\r\n                        maxSize={10 * 1024 * 1024}\r\n                        multiple={false}\r\n                        label=\"الشهادات\"\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import SearchableSelectInputForm from '@/components/forms/SearchableSelectInputForm';\r\nimport SelectInputForm from '@/components/forms/SelectInputForm';\r\nimport SmallImgInputForm from '@/components/forms/SmallImgInputForm';\r\nimport TextInputForm from '@/components/forms/TextInputForm';\r\nimport { endpoints } from '@/lib/axios/axios-global';\r\nimport { apiGet } from '@/lib/axios/axios-utils';\r\nimport { Branch } from '@/types/branches.types';\r\nimport { useEffect, useState } from 'react';\r\nimport { shiftInfo } from '../../types/shift.types';\r\n\r\ninterface Props {\r\n    image: string | null | undefined;\r\n}\r\n\r\nexport default function JobData({ image }: Props) {\r\n    const [branches, setBranches] = useState<{ name: string; value: string }[]>([]);\r\n    const [branchesError, setBranchesError] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        const fetchBranches = async () => {\r\n            try {\r\n                const response = await apiGet({ endpoint: endpoints.branch.list });\r\n\r\n                const options = response.data.data.data.map((branch: Branch) => {\r\n                    return { name: branch.name, value: String(branch.id) };\r\n                });\r\n                setBranches(options);\r\n                setBranchesError(null);\r\n            } catch (error) {\r\n                setBranchesError('Error fetching branches. Please try again later.');\r\n            }\r\n        };\r\n\r\n        fetchBranches();\r\n    }, []);\r\n\r\n    const [shifts, setShifts] = useState<{ name: string; value: string }[]>([]);\r\n    const [shiftsError, setShiftsError] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        const fetchShifts = async () => {\r\n            try {\r\n                const response = await apiGet({ endpoint: endpoints.shifts.list });\r\n\r\n                const options = response.data.data.map((shift: shiftInfo) => {\r\n                    return { name: shift.name, value: String(shift.id) };\r\n                });\r\n                setShifts(options);\r\n                setShiftsError(null);\r\n            } catch (error) {\r\n                setShiftsError('Error fetching shifts. Please try again later.');\r\n            }\r\n        };\r\n\r\n        fetchShifts();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"mb-6 grid grid-cols-1 md:grid-cols-[1fr_1fr_164px] gap-6\">\r\n            <div>\r\n                <TextInputForm name=\"employee_number\" label=\"كود الموظف\" placeholder=\"ادخل كود الموظف\" />\r\n                <SelectInputForm\r\n                    name=\"department\"\r\n                    label=\"القسم\"\r\n                    options={[\r\n                        { value: 'high_school', name: 'الثانوية العامة' },\r\n                        { value: 'bachelor', name: 'بكالوريوس' },\r\n                        { value: 'master', name: 'ماجستير' },\r\n                        { value: 'phd', name: 'دكتوراه' },\r\n                    ]}\r\n                    placeholder=\"اختر  القسم\"\r\n                />\r\n                {/* <SelectInputForm\r\n                    name=\"position\"\r\n                    label=\"الدرجة الوظيفية\"\r\n                    options={[\r\n                        { value: 'high_school', name: 'الثانوية العامة' },\r\n                        { value: 'bachelor', name: 'بكالوريوس' },\r\n                        { value: 'master', name: 'ماجستير' },\r\n                        { value: 'phd', name: 'دكتوراه' },\r\n                    ]}\r\n                    placeholder=\"ادخل الدرجة الوظيفية\"\r\n                />\r\n                <TimeInputForm name=\"start_time\" label=\"وقت بداية الدوام\" placeholder=\"HH:MM\" /> */}\r\n            </div>\r\n            <div>\r\n                <SelectInputForm\r\n                    name=\"position\"\r\n                    label=\"الوظيفة\"\r\n                    options={[\r\n                        { value: 'high_school', name: 'الثانوية العامة' },\r\n                        { value: 'bachelor', name: 'بكالوريوس' },\r\n                        { value: 'master', name: 'ماجستير' },\r\n                        { value: 'phd', name: 'دكتوراه' },\r\n                    ]}\r\n                    placeholder=\"اختر الوظيفة\"\r\n                />\r\n                <SearchableSelectInputForm\r\n                    name=\"branch_id\"\r\n                    label=\"الفرع\"\r\n                    placeholder=\"اختر الفرع\"\r\n                    options={branches}\r\n                    error={branchesError}\r\n                    data={true}\r\n                />\r\n                <SelectInputForm\r\n                    name=\"contract_type\"\r\n                    label=\"نوع التعاقد\"\r\n                    options={[\r\n                        { value: 'high_school', name: 'الثانوية العامة' },\r\n                        { value: 'bachelor', name: 'بكالوريوس' },\r\n                        { value: 'master', name: 'ماجستير' },\r\n                        { value: 'phd', name: 'دكتوراه' },\r\n                    ]}\r\n                    placeholder=\"ادخل نوع التعاقد\"\r\n                />\r\n                <SearchableSelectInputForm\r\n                    name=\"shift_id\"\r\n                    label=\"الوردية\"\r\n                    placeholder=\"اختر الوردية\"\r\n                    options={shifts}\r\n                    error={shiftsError}\r\n                    data={true}\r\n                />\r\n            </div>\r\n            <div>\r\n                {image ? (\r\n                    <SmallImgInputForm\r\n                        name=\"attachment\"\r\n                        maxSize={10 * 1024 * 1024}\r\n                        multiple={false}\r\n                        label=\"الشهادات\"\r\n                        editImages={image}\r\n                    />\r\n                ) : (\r\n                    <SmallImgInputForm name=\"attachment\" maxSize={10 * 1024 * 1024} multiple={false} label=\"الشهادات\" />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { z } from 'zod';\r\n\r\nconst MAX_FILE_SIZE = 10 * 1024 * 1024; // 10MB\r\nconst ALLOWED_FILE_TYPES = ['image/jpeg', 'image/png', 'image/jpg', 'image/gif', 'image/svg+xml'];\r\n\r\nexport const AddEmployeeSchema = z.object({\r\n    name: z.string().min(1, 'Name is required'),\r\n    address: z.string().min(1, 'Address is required'),\r\n    id_number: z.string().min(1, 'The personal id number field is required.'),\r\n    birth_date: z.date({\r\n        required_error: 'Birth date is required',\r\n    }),\r\n    phone_number: z\r\n        .string()\r\n        .min(1, 'رقم الهاتف مطلوب')\r\n        .refine((val) => /^\\d+$/.test(val), 'الرجاء إدخال أرقام فقط')\r\n        .refine((val) => val.length >= 8 && val.length <= 15, 'يجب أن يتكون رقم الهاتف من 8 إلى 15 رقم'),\r\n    email: z.string().min(1, 'The email field is required.').email('Please enter a valid email address.'),\r\n    personal_image: z\r\n        .instanceof(File, { message: 'Image is required' })\r\n        .refine((file) => file.size <= MAX_FILE_SIZE, `Image must be less than ${MAX_FILE_SIZE}MB`)\r\n        .refine(\r\n            (file) => ALLOWED_FILE_TYPES.includes(file.type),\r\n            'Only .jpeg, .png, .jpg, .gif, and .svg formats are allowed',\r\n        ),\r\n    // ---------------------------------------------------------------------------------------------\r\n    education_degree: z.string().min(1, 'Education degree is required'),\r\n    university: z.string().min(1, 'University is required'),\r\n    specialization: z.string().min(1, 'Spexialization is required'),\r\n    graduation_year: z.string({\r\n        required_error: 'Graduation year is required',\r\n    }),\r\n    skills: z.string().min(1, 'Skills is required'),\r\n    previous_experience: z.string().min(1, 'Pervious experience is required'),\r\n    degree_certificate: z\r\n        .instanceof(File, { message: 'Image is required' })\r\n        .refine((file) => file.size <= MAX_FILE_SIZE, `Image must be less than ${MAX_FILE_SIZE}MB`)\r\n        .refine(\r\n            (file) => ALLOWED_FILE_TYPES.includes(file.type),\r\n            'Only .jpeg, .png, .jpg, .gif, and .svg formats are allowed',\r\n        ),\r\n    //--------------------------------------------------------------------------------------------\r\n    employee_number: z.string().min(1, 'Employee code is required'),\r\n    department: z.string().min(1, 'Department is required'),\r\n    position: z.string().min(1, 'Position name is required'),\r\n    branch_id: z.string().min(1, 'Branch is required'),\r\n    contract_type: z.string().min(1, 'Contract type is required'),\r\n    shift_id: z.string().min(1, 'Shift is required'),\r\n    attachment: z\r\n        .instanceof(File, { message: 'Image is required' })\r\n        .refine((file) => file.size <= MAX_FILE_SIZE, `Image must be less than ${MAX_FILE_SIZE}MB`)\r\n        .refine(\r\n            (file) => ALLOWED_FILE_TYPES.includes(file.type),\r\n            'Only .jpeg, .png, .jpg, .gif, and .svg formats are allowed',\r\n        ),\r\n});\r\n\r\nexport type AddEmployeeFormValues = z.infer<typeof AddEmployeeSchema>;\r\n","import SuccessPopup from '@/components/Popups/SuccessPopup';\r\nimport { SecondaryButton } from '@/components/buttons/SecondaryButton';\r\nimport { PrimaryButton } from '@/components/buttons/PrimaryButton';\r\nimport CancelPopup from '@/components/Popups/CancelPopup';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Employee } from '@/types/employee.types';\r\n\r\ninterface Props {\r\n    employee?: Employee | null;\r\n    showSuccessPopup: boolean;\r\n    setShowSuccessPopup: (value: boolean) => void;\r\n    showCancelPopup: boolean;\r\n    setShowCancelPopup: (value: boolean) => void;\r\n    loading: boolean;\r\n}\r\nexport default function Submission({\r\n    employee,\r\n    setShowCancelPopup,\r\n    setShowSuccessPopup,\r\n    showCancelPopup,\r\n    showSuccessPopup,\r\n    loading,\r\n}: Props) {\r\n    const navigate = useNavigate();\r\n\r\n    const handleAddAnother = () => {\r\n        setShowSuccessPopup(false);\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"flex flex-row justify-end items-center mt-8\">\r\n                {employee ? (\r\n                    <SecondaryButton\r\n                        type=\"button\"\r\n                        className=\"xl:px-[87px] xl:py-3 text-[#A21515] border border-red-error-50 xl:font-semibold bg-red-error-50\"\r\n                        onClick={() => setShowCancelPopup(true)}\r\n                    >\r\n                        إلغاء الشكوى\r\n                    </SecondaryButton>\r\n                ) : (\r\n                    <SecondaryButton\r\n                        type=\"button\"\r\n                        className=\"xl:px-[87px] bg-red-error-50 text-[#A21515] hover:bg-red-error-600 hover:text-white-blue-50 xl:py-3 border bordr-[#E8EFF6] xl:font-semibold\"\r\n                        onClick={() => setShowCancelPopup(true)}\r\n                    >\r\n                        الغاء\r\n                    </SecondaryButton>\r\n                )}\r\n                <div>\r\n                    {employee ? (\r\n                        <PrimaryButton className=\"xl:px-[91px] xl:py-3 xl:font-semibold ms-6\" disabled={loading}>\r\n                            {loading ? 'جاري التحميل...' : 'حفظ التغييرات'}\r\n                        </PrimaryButton>\r\n                    ) : (\r\n                        <PrimaryButton className=\"xl:px-[91px] xl:py-3 xl:font-semibold ms-6\" disabled={loading}>\r\n                            {loading ? 'جاري التحميل...' : 'اضافة'}\r\n                        </PrimaryButton>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <CancelPopup\r\n                open={showCancelPopup}\r\n                onClickButton1={() => {\r\n                    setShowCancelPopup(false);\r\n                }}\r\n                onClickButton2={() => {\r\n                    navigate('/human-resources');\r\n                    setShowCancelPopup(false);\r\n                }}\r\n                text1={employee ? 'إلغاء تعديل بيانات الموظف' : 'إلغاء إضافة موظف'}\r\n                text2={\r\n                    employee\r\n                        ? 'أنت على وشك إلغاء عملية تعديل بيانات الموظف دون إكمال البيانات المطلوبة. سيتم تجاهل جميع البيانات المدخلة، هل أنت متأكد؟'\r\n                        : 'أنت على وشك إلغاء عملية إضافة موظف جديد دون إكمال البيانات المطلوبة. سيتم تجاهل جميع البيانات المدخلة، هل أنت متأكد؟'\r\n                }\r\n                textButton1={employee ? 'إكمال التعديل' : 'إكمال الإضافة'}\r\n                textButton2={employee ? 'إلغاء التعديل' : 'إلغاء الإضافة'}\r\n            />\r\n            <SuccessPopup\r\n                text1={employee ? 'تم تعديل بيانات الموظف بنحاح' : 'تم إضافة موظف جديد بنحاح'}\r\n                text2={employee ? 'تم تعديل بيانات الموظف بنحاح' : 'تم تسجيل بيانات الموظف الجديد بنجاح.'}\r\n                textButton1=\"العودة لقائمة الموظفين\"\r\n                textButton2={employee ? 'تعديل بيانات اخرى' : 'إضافة موظف أخر'}\r\n                open={showSuccessPopup}\r\n                onAddAnother={handleAddAnother}\r\n                onReturnToList={() => {\r\n                    navigate('/human-resources');\r\n                    setShowSuccessPopup(false);\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","import PersonalInfo from './PersonalInfo';\r\nimport Experience from './Experience';\r\nimport JobData from './JobData';\r\nimport MainHeading from '@/components/heading/MainHeading';\r\n\r\nimport { Form } from '@/components/ui/form';\r\nimport { useForm } from 'react-hook-form';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { apiPost } from '@/lib/axios/axios-utils';\r\nimport { endpoints } from '@/lib/axios/axios-global';\r\nimport { useMemo, useState } from 'react';\r\nimport { AddEmployeeFormValues, AddEmployeeSchema } from '../schemas/addEmployee/add-employee-schema';\r\nimport Submission from './Submission';\r\nimport { Employee } from '@/types/employee.types';\r\nimport { format } from 'date-fns';\r\n\r\ninterface Props {\r\n    employee?: Employee | null;\r\n}\r\n\r\nexport default function AddEmployeeForm({ employee }: Props) {\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [showSuccessPopup, setShowSuccessPopup] = useState(false);\r\n    const [showCancelPopup, setShowCancelPopup] = useState(false);\r\n\r\n    const defaultValues = useMemo(\r\n        () => ({\r\n            name: employee?.name || '',\r\n            address: employee?.address || '',\r\n            id_number: employee?.id_number || '',\r\n            birth_date: employee?.birth_date ? new Date(employee.birth_date) : undefined,\r\n            phone_number: employee?.phone_number || '',\r\n            email: employee?.email || '',\r\n            // personal_image: employee?.personal_image || undefined,\r\n            education_degree: employee?.education_degree || '',\r\n            university: employee?.university || '',\r\n            specialization: employee?.specialization || '',\r\n            graduation_year: employee?.graduation_year || undefined,\r\n            skills: employee?.skills || undefined,\r\n            previous_experience: employee?.previous_experience || undefined,\r\n            // degree_certificate: employee?.degree_certificate || undefined,\r\n            employee_number: employee?.employee_number || '',\r\n            department: employee?.department || '',\r\n            position: employee?.position || '',\r\n            branch_id: employee?.branch_id ? String(employee.branch_id) : '',\r\n            shift_id: employee?.shift_id ? String(employee.shift_id) : '',\r\n            contract_type: employee?.contract_type || '',\r\n            // attachment: employee?.attachment || undefined,\r\n        }),\r\n        [employee],\r\n    );\r\n\r\n    const form = useForm<AddEmployeeFormValues>({\r\n        resolver: zodResolver(AddEmployeeSchema),\r\n        defaultValues,\r\n    });\r\n\r\n    const onSubmit = async (data: AddEmployeeFormValues) => {\r\n        setLoading(true);\r\n        setError(null); // Clear previous errors\r\n        const formatedData = {\r\n            ...data,\r\n            birth_date: format(data.birth_date, 'yyyy-MM-dd'),\r\n        };\r\n        try {\r\n            await apiPost({\r\n                endpoint: employee ? endpoints.employee.update + employee.id : endpoints.employee.create,\r\n                body: formatedData,\r\n                config: { headers: { 'Content-Type': 'multipart/form-data' } },\r\n            });\r\n            setShowSuccessPopup(true);\r\n        } catch (error: any) {\r\n            if (error.response?.data?.errors) {\r\n                // Handle field-specific errors\r\n                Object.entries(error.response.data.errors).forEach(([field, messages]) => {\r\n                    form.setError(field as any, {\r\n                        type: 'manual',\r\n                        message: (messages as string[]).join(', '),\r\n                    });\r\n                });\r\n            } else {\r\n                // Handle generic error\r\n                let errorMessage = 'حدث خطأ أثناء إرسال البيانات. يرجى المحاولة مرة أخرى.';\r\n                if (error.response) {\r\n                    errorMessage = error.response.data.msg || errorMessage;\r\n                } else if (error.request) {\r\n                    errorMessage = 'تعذر الاتصال بالخادم. يرجى التحقق من اتصالك بالإنترنت.';\r\n                }\r\n                setError(errorMessage);\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form {...form}>\r\n                <form onSubmit={form.handleSubmit(onSubmit)} className=\"mb-8\">\r\n                    {error && (\r\n                        <div className=\"mb-4 p-4 bg-red-100 border border-red-400 text-red-700 rounded-lg\">\r\n                            <div className=\"flex justify-between items-center\">\r\n                                <span className=\"\">{error}</span>\r\n                                <button onClick={() => setError(null)} className=\"text-red-700 hover:text-red-900\">\r\n                                    ×\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <div>\r\n                        <MainHeading text=\"البيانات الشخصية\" />\r\n                        <PersonalInfo image={employee?.personal_image} />\r\n                        <MainHeading text=\"المؤهلات والخبرات\" />\r\n                        <Experience image={employee?.degree_certificate} />\r\n                        <MainHeading text=\"البيانات الوظيفية\" />\r\n                        <JobData image={employee?.attachment} />\r\n                    </div>\r\n                    <Submission\r\n                        employee={employee}\r\n                        loading={loading}\r\n                        setShowCancelPopup={setShowCancelPopup}\r\n                        setShowSuccessPopup={setShowSuccessPopup}\r\n                        showCancelPopup={showCancelPopup}\r\n                        showSuccessPopup={showSuccessPopup}\r\n                    />\r\n                </form>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n"],"names":["DocumentsSection","onDrop","acceptedFiles","getRootProps","getInputProps","useDropzone","jsx","jsxs","SecondaryButton","ImportIcon","SmallUploadImgIcon","width","height","className","SmallImgInputForm","name","label","maxSize","multiple","editImages","control","setValue","watch","getValues","useFormContext","imgPreviews","setImgPreviews","useState","removeImage","index","currentFiles","newFiles","_","i","prev","currentValue","combinedFiles","removeDuplicates","newPreviews","file","images","useEffect","FormField","field","FormItem","FormLabel","FormControl","ImgFileUploader","files","FormMessage","previews","preview","e","PersonalInfo","image","TextInputForm","DateInputForm","YearSelectForm","data","placeholder","cn","Select","SelectTrigger","CalendarIcon","SelectValue","SelectContent","y","SelectItem","Experience","SelectInputForm","JobData","branches","setBranches","branchesError","setBranchesError","options","apiGet","endpoints","branch","shifts","setShifts","shiftsError","setShiftsError","shift","SearchableSelectInputForm","MAX_FILE_SIZE","ALLOWED_FILE_TYPES","AddEmployeeSchema","z","val","Submission","employee","setShowCancelPopup","setShowSuccessPopup","showCancelPopup","showSuccessPopup","loading","navigate","useNavigate","handleAddAnother","Fragment","PrimaryButton","CancelPopup","SuccessPopup","AddEmployeeForm","error","setError","setLoading","defaultValues","useMemo","form","useForm","zodResolver","onSubmit","formatedData","format","apiPost","messages","errorMessage","Form","MainHeading"],"mappings":"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"}