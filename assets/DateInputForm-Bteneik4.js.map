{"version":3,"file":"DateInputForm-Bteneik4.js","sources":["../../src/components/forms/DateInputForm.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { format } from 'date-fns';\r\nimport { cn } from '@/lib/utils';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Calendar } from '@/components/ui/calendar';\r\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport { FormField, FormItem, FormLabel, FormMessage } from '../ui/form';\r\nimport CalendarIcon from '../icons/CalendarIcon';\r\n\r\ninterface DatePickerProps {\r\n    className?: string;\r\n    name: string;\r\n    label?: string;\r\n    placeholder?: string;\r\n    disabled?: (date: Date) => boolean;\r\n    disabledDate?: boolean;\r\n}\r\n\r\nexport function DateInputForm({\r\n    className,\r\n    name,\r\n    label,\r\n    placeholder,\r\n    disabled = undefined,\r\n    disabledDate,\r\n}: DatePickerProps) {\r\n    const [calendarOpen, setCalendarOpen] = React.useState(false);\r\n    const { control } = useFormContext();\r\n\r\n    // Generate years from 1900 to current year\r\n    const years = React.useMemo(() => {\r\n        const currentYear = new Date().getFullYear();\r\n        return Array.from({ length: currentYear - 1900 + 1 }, (_, i) => currentYear - i);\r\n    }, []);\r\n\r\n    // Generate months\r\n    const months = React.useMemo(\r\n        () => [\r\n            'January',\r\n            'February',\r\n            'March',\r\n            'April',\r\n            'May',\r\n            'June',\r\n            'July',\r\n            'August',\r\n            'September',\r\n            'October',\r\n            'November',\r\n            'December',\r\n        ],\r\n        [],\r\n    );\r\n\r\n    const [month, setMonth] = React.useState<number>(new Date().getMonth());\r\n    const [year, setYear] = React.useState<number>(new Date().getFullYear());\r\n\r\n    const handleMonthChange = (value: string) => {\r\n        setMonth(months.indexOf(value));\r\n    };\r\n\r\n    const handleYearChange = (value: string) => {\r\n        setYear(parseInt(value));\r\n    };\r\n    return (\r\n        <FormField\r\n            control={control}\r\n            name={name}\r\n            render={({ field }) => (\r\n                <FormItem className={cn('flex flex-col', className)}>\r\n                    <FormLabel className=\"text-primery-blue-900 font-medium text-[18px] leading-[33.73px] tracking-normal text-start\">\r\n                        {label}\r\n                    </FormLabel>\r\n                    <Popover open={calendarOpen} onOpenChange={setCalendarOpen}>\r\n                        <PopoverTrigger asChild disabled={disabledDate}>\r\n                            <Button\r\n                                id=\"dob\"\r\n                                variant={'outline'}\r\n                                className=\"pe-3 text-start font-medium flex flex-row justify-between\"\r\n                            >\r\n                                {field.value ? (\r\n                                    format(field.value, 'yyyy-MM-dd')\r\n                                ) : (\r\n                                    <span className=\"text-white-blue-600\">{placeholder}</span>\r\n                                )}\r\n                                <CalendarIcon width=\"24\" height=\"24\" className=\"text-white-blue-600\" />\r\n                            </Button>\r\n                        </PopoverTrigger>\r\n                        <PopoverContent className=\"w-auto p-0\" align=\"start\">\r\n                            <div className=\"flex gap-2 p-3 border-b\">\r\n                                <Select value={months[month]} onValueChange={handleMonthChange}>\r\n                                    <SelectTrigger className=\"w-[140px]\">\r\n                                        <SelectValue placeholder=\"Month\" />\r\n                                    </SelectTrigger>\r\n                                    <SelectContent>\r\n                                        {months.map((month) => (\r\n                                            <SelectItem key={month} value={month}>\r\n                                                {month}\r\n                                            </SelectItem>\r\n                                        ))}\r\n                                    </SelectContent>\r\n                                </Select>\r\n                                <Select value={year.toString()} onValueChange={handleYearChange}>\r\n                                    <SelectTrigger className=\"w-[100px]\">\r\n                                        <SelectValue placeholder=\"Year\" />\r\n                                    </SelectTrigger>\r\n                                    <SelectContent>\r\n                                        {years.map((year) => (\r\n                                            <SelectItem key={year} value={year.toString()}>\r\n                                                {year}\r\n                                            </SelectItem>\r\n                                        ))}\r\n                                    </SelectContent>\r\n                                </Select>\r\n                            </div>\r\n                            <Calendar\r\n                                mode=\"single\"\r\n                                selected={field.value}\r\n                                onSelect={(newDate) => {\r\n                                    field.onChange(newDate);\r\n                                    setCalendarOpen(false);\r\n                                }}\r\n                                month={new Date(year, month)}\r\n                                onMonthChange={(newMonth) => {\r\n                                    setMonth(newMonth.getMonth());\r\n                                    setYear(newMonth.getFullYear());\r\n                                }}\r\n                                disabled={disabled}\r\n                                initialFocus\r\n                                className={cn(\r\n                                    'p-3 pointer-events-auto rounded-md border-2 shadow-lg bg-card',\r\n                                    'animate-in fade-in-0 zoom-in-95',\r\n                                )}\r\n                            />\r\n                        </PopoverContent>\r\n                    </Popover>\r\n                    <FormMessage />\r\n                </FormItem>\r\n            )}\r\n        />\r\n    );\r\n}\r\n"],"names":["DateInputForm","className","name","label","placeholder","disabled","disabledDate","calendarOpen","setCalendarOpen","React.useState","control","useFormContext","years","React.useMemo","currentYear","_","i","months","month","setMonth","year","setYear","handleMonthChange","value","handleYearChange","jsx","FormField","field","jsxs","FormItem","cn","FormLabel","Popover","PopoverTrigger","Button","format","CalendarIcon","PopoverContent","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","Calendar","newDate","newMonth","FormMessage"],"mappings":"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"}