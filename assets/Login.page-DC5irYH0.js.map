{"version":3,"file":"Login.page-DC5irYH0.js","sources":["../../src/features/auth/schemas/LoginSchema.ts","../../src/components/icons/Lock.tsx","../../src/components/icons/EyeIcon.tsx","../../src/features/auth/components/LoginForm.tsx","../../src/features/auth/pages/Login.page.tsx"],"sourcesContent":["import { z } from 'zod';\r\n\r\nexport const LoginSchema = z.object({\r\n    username: z.string().min(2, {\r\n        message: 'Username must be at least 2 characters.',\r\n    }),\r\n    password: z.string().min(6, {\r\n        message: 'Password must be at least 6 characters.',\r\n    }),\r\n});\r\n","interface IconProps {\r\n    width?: string;\r\n    height?: string;\r\n    className?: string;\r\n}\r\n\r\nconst LockIcon = ({ width = '24', height = '24', className = '' }: IconProps) => {\r\n    return (\r\n        <span className={className}>\r\n            <svg width={width} height={height} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                    d=\"M6 10V8C6 4.69 7 2 12 2C17 2 18 4.69 18 8V10\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"1.5\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                />\r\n                <path\r\n                    d=\"M12 18.5C13.3807 18.5 14.5 17.3807 14.5 16C14.5 14.6193 13.3807 13.5 12 13.5C10.6193 13.5 9.5 14.6193 9.5 16C9.5 17.3807 10.6193 18.5 12 18.5Z\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"1.5\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                />\r\n                <path\r\n                    d=\"M17 22H7C3 22 2 21 2 17V15C2 11 3 10 7 10H17C21 10 22 11 22 15V17C22 21 21 22 17 22Z\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"1.5\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                />\r\n            </svg>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default LockIcon;\r\n","interface IconProps {\r\n    width?: string;\r\n    height?: string;\r\n    className?: string;\r\n}\r\n\r\nconst EyeIcon = ({ width = '24', height = '24', className = '' }: IconProps) => {\r\n    return (\r\n        <span className={className}>\r\n            <svg width={width} height={height} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                    d=\"M15.58 12C15.58 13.98 13.98 15.58 12 15.58C10.02 15.58 8.42001 13.98 8.42001 12C8.42001 10.02 10.02 8.42001 12 8.42001C13.98 8.42001 15.58 10.02 15.58 12Z\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"1.5\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                />\r\n                <path\r\n                    d=\"M12 20.27C15.53 20.27 18.82 18.19 21.11 14.59C22.01 13.18 22.01 10.81 21.11 9.4C18.82 5.8 15.53 3.72 12 3.72C8.47 3.72 5.18 5.8 2.89 9.4C1.99 10.81 1.99 13.18 2.89 14.59C5.18 18.19 8.47 20.27 12 20.27Z\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"1.5\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                />\r\n            </svg>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default EyeIcon;\r\n","import { zodResolver } from '@hookform/resolvers/zod';\r\nimport { z } from 'zod';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\r\nimport { Input } from '@/components/ui/input';\r\nimport { LoginSchema } from '../schemas/LoginSchema';\r\nimport UserIcon from '@/components/icons/UserIcon';\r\nimport { useTranslation } from 'react-i18next';\r\nimport LockIcon from '@/components/icons/Lock';\r\nimport EyeIcon from '@/components/icons/EyeIcon';\r\nimport { useState } from 'react';\r\nimport { apiPost } from '@/lib/axios/axios-utils';\r\nimport { endpoints } from '@/lib/axios/axios-global';\r\nimport { useAppDispatch } from '@/core/global-store';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { setCredentials } from '@/core/global-store/features/auth/authSlice';\r\n\r\nexport function LoginForm() {\r\n    const dispatch = useAppDispatch();\r\n    const navigate = useNavigate();\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const { t } = useTranslation();\r\n\r\n    const form = useForm<z.infer<typeof LoginSchema>>({\r\n        resolver: zodResolver(LoginSchema),\r\n        defaultValues: {\r\n            username: '',\r\n            password: '',\r\n        },\r\n    });\r\n\r\n    const { formState } = form;\r\n\r\n    async function onSubmit(data: z.infer<typeof LoginSchema>) {\r\n        try {\r\n            const response = await apiPost({\r\n                endpoint: endpoints.auth.login,\r\n                body: { email: data.username, password: data.password },\r\n            });\r\n\r\n            setErrMsg('');\r\n            dispatch(setCredentials({ token: response.data.data.token, user: response.data.data }));\r\n            navigate('/', { replace: true });\r\n        } catch (err: any) {\r\n            if (!err?.response) {\r\n                setErrMsg('No Server Response');\r\n            } else if (err?.response?.status === 400) {\r\n                setErrMsg('Missing Admin Code or password');\r\n            } else if (err?.response?.status === 401) {\r\n                setErrMsg('wrong Admin Code or password');\r\n            } else {\r\n                setErrMsg('Login failed');\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form {...form}>\r\n            <form\r\n                onSubmit={form.handleSubmit(onSubmit)}\r\n                className=\"w-2/3 font-cairo max-w-96 space-y-6 shadow-[0px_8px_13px_-3px_#00000012] p-6 rounded-2xl border border-[#F3E6FF]\"\r\n            >\r\n                <FormField\r\n                    control={form.control}\r\n                    name=\"username\"\r\n                    render={({ field }) => (\r\n                        <FormItem>\r\n                            <FormLabel className=\"text-[#100147]\">{t('admin_code')}</FormLabel>\r\n                            <FormControl>\r\n                                <div className=\"relative\">\r\n                                    <Input className=\"px-6\" placeholder={t('enter_admin_code')} {...field} />\r\n                                    <span className=\"cursor-pointer absolute start-1 top-1/2 -translate-y-1/2 text-muted-foreground\">\r\n                                        <UserIcon className=\"cursor-pointer\" />\r\n                                    </span>\r\n                                </div>\r\n                            </FormControl>\r\n                            <FormMessage />\r\n                        </FormItem>\r\n                    )}\r\n                />\r\n                <FormField\r\n                    control={form.control}\r\n                    name=\"password\"\r\n                    render={({ field }) => (\r\n                        <FormItem>\r\n                            <FormLabel className=\"text-[#100147]\">{t('password')}</FormLabel>\r\n                            <FormControl>\r\n                                <div className=\"relative\">\r\n                                    <span className=\"absolute start-1 top-1/2 -translate-y-1/2 text-muted-foreground\">\r\n                                        <LockIcon width=\"16\" height=\"16\" />\r\n                                    </span>\r\n                                    <Input\r\n                                        type={showPassword ? 'text' : 'password'}\r\n                                        className=\"px-6\"\r\n                                        placeholder={t('enter_your_password')}\r\n                                        {...field}\r\n                                    />\r\n                                    <button\r\n                                        onClick={() => {\r\n                                            setShowPassword(!showPassword);\r\n                                        }}\r\n                                        type=\"button\"\r\n                                        className=\"absolute end-1 top-1/2 -translate-y-1/2 text-muted-foreground\"\r\n                                    >\r\n                                        <EyeIcon width=\"16\" height=\"16\" />\r\n                                    </button>\r\n                                </div>\r\n                            </FormControl>\r\n                            <FormMessage />\r\n                        </FormItem>\r\n                    )}\r\n                />\r\n                <div className=\"text-red-error-600\">{errMsg.length > 0 && <p>{errMsg}</p>}</div>\r\n                <Button\r\n                    type=\"submit\"\r\n                    className={`w-full ${formState.isDirty ? 'bg-primery-blue-700 hover:bg-primery-blue-700' : 'bg-primery-blue-200 hover:bg-primery-blue-200'}`}\r\n                >\r\n                    {t('login')}\r\n                </Button>\r\n            </form>\r\n        </Form>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { LoginForm } from '../components/LoginForm';\r\n\r\nconst Login = () => {\r\n    return (\r\n        <section className=\"flex flex-col items-center justify-center h-screen\">\r\n            <LoginForm />\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["LoginSchema","z","LockIcon","width","height","className","jsx","jsxs","EyeIcon","LoginForm","dispatch","useAppDispatch","navigate","useNavigate","showPassword","setShowPassword","useState","errMsg","setErrMsg","t","useTranslation","form","useForm","zodResolver","formState","onSubmit","data","response","apiPost","endpoints","setCredentials","err","_a","_b","Form","FormField","field","FormItem","FormLabel","FormControl","Input","UserIcon","FormMessage","Button","Login"],"mappings":"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"}