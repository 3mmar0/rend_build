{"version":3,"file":"Maintenance.page-s7fyeJVA.js","sources":["../../src/components/charts/BarChart.tsx","../../src/features/maintenance/components/statistics/MaintenanceStatusReport.tsx","../../src/features/maintenance/pages/Maintenance.page.tsx"],"sourcesContent":["import { Bar, BarChart, CartesianGrid, XAxis, YAxis } from 'recharts';\r\n\r\nimport { ChartConfig, ChartContainer, ChartTooltip, ChartTooltipContent } from '@/components/ui/chart';\r\n\r\ninterface Props {\r\n    barLabelColor?: string;\r\n    chartData?: any[];\r\n    chartConfig: ChartConfig;\r\n}\r\n\r\nconst formatNumber = (value: any) => {\r\n    if (value >= 1000000000) {\r\n        return `${(value / 1000000000).toFixed(1)}B`; // Billions\r\n    } else if (value >= 1000000) {\r\n        return `${(value / 1000000).toFixed(1)}M`; // Millions\r\n    } else if (value >= 1000) {\r\n        return `${(value / 1000).toFixed(1)}K`; // Thousands\r\n    } else if (value === 0) {\r\n        return null;\r\n    }\r\n    return value; // Return the original value if less than 1000\r\n};\r\n\r\nexport function BarChartComponent({ barLabelColor = '#000', chartConfig, chartData }: Props) {\r\n    return (\r\n        <div className=\"min-w-[508px] min-h-[260px]\">\r\n            {/* <CardContent> */}\r\n            <ChartContainer config={chartConfig}>\r\n                <BarChart\r\n                    margin={{\r\n                        top: 0,\r\n                        right: 0,\r\n                        left: 0,\r\n                        bottom: 0,\r\n                    }}\r\n                    accessibilityLayer\r\n                    data={chartData}\r\n                    barCategoryGap={105}\r\n                >\r\n                    <CartesianGrid vertical={false} strokeDasharray=\"5 5\" />\r\n                    <XAxis\r\n                        dataKey=\"days\"\r\n                        tickLine={false}\r\n                        tickMargin={10}\r\n                        axisLine={true}\r\n                        tickFormatter={(value) =>\r\n                            value ? chartConfig[value as keyof typeof chartConfig]?.label : value\r\n                        }\r\n                        // width={600}\r\n                        tick={{ fill: '#000000B2' }}\r\n                    />\r\n                    {/* <ChartTooltip content={<ChartTooltipContent hideLabel />} />\r\n                        <ChartLegend content={<ChartLegendContent />} /> */}\r\n                    <YAxis\r\n                        axisLine={true}\r\n                        tickLine={false}\r\n                        tick={{ fill: '#6b7280', textAnchor: 'start' }}\r\n                        // width={40}\r\n                    />\r\n                    <ChartTooltip\r\n                        formatter={(value) => value}\r\n                        cursor={false}\r\n                        content={<ChartTooltipContent hideLabel />}\r\n                    />\r\n                    <Bar\r\n                        dataKey=\"visitors\"\r\n                        strokeWidth={2}\r\n                        radius={[9999, 9999, 0, 0]}\r\n                        barSize={68}\r\n                        activeIndex={2}\r\n                        background={{ fill: '#D6DBED', opacity: 0.4 }}\r\n                        label={{\r\n                            // Add labels to the bars\r\n                            position: 'insideTop', // Position of the label (e.g., 'top', 'inside', 'insideStart', 'insideEnd')\r\n                            fill: barLabelColor, // Text color\r\n                            opacity: 0.7,\r\n                            fontSize: 12, // Font size\r\n                            fontWeight: 'bold', // Font weight\r\n                            formatter: formatNumber, // Apply number formatting to bar labels\r\n                        }}\r\n                    />\r\n                </BarChart>\r\n            </ChartContainer>\r\n            {/* </CardContent> */}\r\n        </div>\r\n    );\r\n}\r\n","import UnderlineHeading from '@/components/heading/UnderlineHeading';\r\nimport { useEffect, useState } from 'react';\r\nimport { CustomSelect } from '@/components/dropDown/Dropdown';\r\nimport { BarChartComponent } from '../../../../components/charts/BarChart';\r\nimport { apiGet } from '@/lib/axios/axios-utils';\r\nimport { endpoints } from '@/lib/axios/axios-global';\r\nimport { MaintenanceCenterStatus } from '@/types/maintenanceCenter';\r\nimport { ChartConfig } from '@/components/ui/chart';\r\n\r\nconst MaintenanceStatusReport = () => {\r\n    const [stats, setStats] = useState<MaintenanceCenterStatus | null>(null);\r\n    const [selectedValue, setSelectedValue] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchStats = async () => {\r\n            try {\r\n                const res = await apiGet({\r\n                    endpoint: endpoints.maintenance.dashboardChart,\r\n                    queryParams: { period: selectedValue },\r\n                });\r\n                setStats(res.data.data.maintenance_counts);\r\n            } catch (err) {\r\n                setStats(null);\r\n            }\r\n        };\r\n        fetchStats();\r\n    }, [selectedValue]);\r\n\r\n    let chartData: Array<{ days: string; visitors: string; fill: string }> = [];\r\n\r\n    if (stats) {\r\n        chartData = Object.entries(stats).map(([key, value]) => ({\r\n            days: key,\r\n            visitors: value,\r\n            fill: `var(--color-${key})`,\r\n        }));\r\n    }\r\n\r\n    const chartConfig = {\r\n        visitors: {\r\n            label: 'Visitors',\r\n        },\r\n        in_progress: {\r\n            label: 'معطل',\r\n            color: 'hsl(var(--chart-5))',\r\n        },\r\n        completed: {\r\n            label: 'جاري الصيانة',\r\n            color: 'hsl(var(--chart-4))',\r\n        },\r\n        broken: {\r\n            label: 'تم الاصلاح',\r\n            color: 'hsl(var(--chart-1))',\r\n        },\r\n    } satisfies ChartConfig;\r\n\r\n    return (\r\n        <div className=\"shadow-[0px_2px_12px_0px_#14142B14] rounded-[0.5rem]\">\r\n            <div className=\"px-4 pt-4 flex flex-row justify-between mb-10\">\r\n                <UnderlineHeading text=\"تقرير عن حالات الصيانه\" />\r\n                <CustomSelect\r\n                    options={[\r\n                        { label: 'يومي', value: 'daily' },\r\n                        { label: 'أسبوعي ', value: 'weekly ' },\r\n                        { label: 'شهري', value: 'monthly' },\r\n                        { label: 'سنوي', value: 'yearly' },\r\n                    ]}\r\n                    value={selectedValue}\r\n                    onValueChange={setSelectedValue}\r\n                    placeholder=\"المدة\"\r\n                    width=\"min-w-[101px]\"\r\n                />\r\n            </div>\r\n            <div className=\"ps-6 pb-4 flex flex-row items-center justify-center gap-6\">\r\n                <BarChartComponent chartData={chartData} chartConfig={chartConfig} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MaintenanceStatusReport;\r\n","import CarsStatistics from '@/features/car/components/statistics/CarsPieStatistics';\r\nimport MaintenanceStatusReport from '../components/statistics/MaintenanceStatusReport';\r\nimport SettingsIcon from '@/components/icons/statistics/SettingIcon';\r\nimport UserIcon from '@/components/icons/statistics/UserIcon';\r\nimport CalendarIcon from '@/components/icons/statistics/CalendarIcon';\r\nimport CarIcon from '@/components/icons/statistics/CarIcon';\r\nimport { Card } from '@/types/statistics';\r\nimport StatisticsCards from '../../../components/cards/StatisticsCards';\r\nimport { useEffect, useState } from 'react';\r\nimport { apiGet } from '@/lib/axios/axios-utils';\r\nimport { endpoints } from '@/lib/axios/axios-global';\r\nimport { MaintenanceDashboardStats } from '../types/maintenanceDashboard.types';\r\n\r\nconst MaintenancePage = () => {\r\n    const [stats, setStats] = useState<MaintenanceDashboardStats | null>(null);\r\n\r\n    useEffect(() => {\r\n        const fetchStats = async () => {\r\n            try {\r\n                const res = await apiGet({ endpoint: endpoints.maintenance.dashboard });\r\n                setStats(res.data.data);\r\n            } catch (err) {\r\n                setStats(null);\r\n            }\r\n        };\r\n        fetchStats();\r\n    }, []);\r\n\r\n    const cards: Card[] = [\r\n        { text: 'زيارة خلال الشهر', icon: <CalendarIcon />, num: stats?.monthly_maintenances, percent: 0 },\r\n        { text: 'معطل', icon: <UserIcon />, num: stats?.broken_count, percent: 0 },\r\n        { text: 'جاري الصيانة', icon: <SettingsIcon />, num: stats?.in_progress_count, percent: 0, negative: true },\r\n        { text: 'تم تصليح', icon: <CarIcon />, num: stats?.completed_count, percent: 0 },\r\n    ];\r\n    \r\n    return (\r\n        <div className=\"mt-6 w-full\">\r\n            <StatisticsCards cards={cards} />\r\n            <div className=\"mt-6 grid custom-grid-big gap-6 justify-center sm:justify-between\">\r\n                <CarsStatistics />\r\n                <MaintenanceStatusReport />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MaintenancePage;\r\n"],"names":["formatNumber","value","BarChartComponent","barLabelColor","chartConfig","chartData","jsx","ChartContainer","jsxs","BarChart","CartesianGrid","XAxis","_a","YAxis","ChartTooltip","ChartTooltipContent","Bar","MaintenanceStatusReport","stats","setStats","useState","selectedValue","setSelectedValue","useEffect","res","apiGet","endpoints","key","UnderlineHeading","CustomSelect","MaintenancePage","cards","CalendarIcon","UserIcon","SettingsIcon","CarIcon","StatisticsCards","CarsStatistics"],"mappings":"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"}