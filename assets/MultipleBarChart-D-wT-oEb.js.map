{"version":3,"file":"MultipleBarChart-D-wT-oEb.js","sources":["../../src/components/charts/MultipleBarChart.tsx"],"sourcesContent":["import { Bar, BarChart, CartesianGrid, XAxis, YAxis } from 'recharts';\r\nimport {\r\n    ChartConfig,\r\n    ChartContainer,\r\n    ChartLegend,\r\n    ChartLegendContent,\r\n    ChartTooltip,\r\n    ChartTooltipContent,\r\n} from '@/components/ui/chart';\r\n\r\ninterface Props {\r\n    chartData: unknown[];\r\n    chartConfig: ChartConfig;\r\n    barLabelColor?: string;\r\n}\r\n\r\nconst formatNumber = (value: any) => {\r\n    if (value >= 1000000000) {\r\n        return `${(value / 1000000000).toFixed(1)}B`; // Billions\r\n    } else if (value >= 1000000) {\r\n        return `${(value / 1000000).toFixed(1)}M`; // Millions\r\n    } else if (value >= 1000) {\r\n        return `${(value / 1000).toFixed(1)}K`; // Thousands\r\n    } else if (value === 0) {\r\n        return null;\r\n    }\r\n    return value; // Return the original value if less than 1000\r\n};\r\n\r\nexport default function MultipleBarChart({ chartData, chartConfig, barLabelColor = '#000' }: Props) {\r\n    return (\r\n        <div className=\"min-w-[508px] min-h-[316px]\">\r\n            {/* <CardContent> */}\r\n            <ChartContainer config={chartConfig}>\r\n                <BarChart\r\n                    margin={{\r\n                        top: 0,\r\n                        right: 0,\r\n                        left: 0,\r\n                        bottom: 0,\r\n                    }}\r\n                    accessibilityLayer\r\n                    data={chartData}\r\n                    barCategoryGap={105}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"6 6\" />\r\n                    <XAxis\r\n                        dataKey=\"days\"\r\n                        tickLine={false}\r\n                        tickMargin={10}\r\n                        axisLine={true}\r\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                        // @ts-ignore\r\n                        // tickFormatter={(value) => chartConfig[value as keyof typeof chartConfig]?.label}\r\n                        // width={600}\r\n                        tick={{ fill: '#000000B2' }}\r\n                    />\r\n                    <ChartTooltip formatter={formatNumber} content={<ChartTooltipContent />} />\r\n                    <ChartLegend content={<ChartLegendContent />} />\r\n\r\n                    <YAxis\r\n                        axisLine={true}\r\n                        tickLine={false}\r\n                        tick={{ fill: '#6b7280', textAnchor: 'start' }}\r\n                        // width={40}\r\n                        tickFormatter={formatNumber}\r\n                    />\r\n                    <Bar\r\n                        dataKey=\"visitors\"\r\n                        strokeWidth={2}\r\n                        radius={[9999, 9999, 0, 0]}\r\n                        fill=\"var(--color-visitors)\"\r\n                        barSize={40}\r\n                        activeIndex={2}\r\n                        background={{ fill: '#D6DBED', opacity: 0.4 }}\r\n                        label={{\r\n                            // Add labels to the bars\r\n                            position: 'insideTop', // Position of the label (e.g., 'top', 'inside', 'insideStart', 'insideEnd')\r\n                            fill: barLabelColor, // Text color\r\n                            opacity: 0.7,\r\n                            fontSize: 12, // Font size\r\n                            fontWeight: 'bold', // Font weight\r\n                            formatter: formatNumber, // Apply number formatting to bar labels\r\n                        }}\r\n                    />\r\n                </BarChart>\r\n            </ChartContainer>\r\n            {/* </CardContent> */}\r\n        </div>\r\n    );\r\n}\r\n"],"names":["formatNumber","value","MultipleBarChart","chartData","chartConfig","barLabelColor","jsx","ChartContainer","jsxs","BarChart","CartesianGrid","XAxis","ChartTooltip","ChartTooltipContent","ChartLegend","ChartLegendContent","YAxis","Bar"],"mappings":"mLAgBA,MAAMA,EAAgBC,GACdA,GAAS,IACF,IAAIA,EAAQ,KAAY,QAAQ,CAAC,CAAC,IAClCA,GAAS,IACT,IAAIA,EAAQ,KAAS,QAAQ,CAAC,CAAC,IAC/BA,GAAS,IACT,IAAIA,EAAQ,KAAM,QAAQ,CAAC,CAAC,IAC5BA,IAAU,EACV,KAEJA,EAGX,SAAwBC,EAAiB,CAAE,UAAAC,EAAW,YAAAC,EAAa,cAAAC,EAAgB,QAAiB,CAChG,aACK,MAAI,CAAA,UAAU,8BAEX,SAACC,EAAA,IAAAC,EAAA,CAAe,OAAQH,EACpB,SAAAI,EAAA,KAACC,EAAA,CACG,OAAQ,CACJ,IAAK,EACL,MAAO,EACP,KAAM,EACN,OAAQ,CACZ,EACA,mBAAkB,GAClB,KAAMN,EACN,eAAgB,IAEhB,SAAA,CAACG,EAAAA,IAAAI,EAAA,CAAc,gBAAgB,KAAM,CAAA,EACrCJ,EAAA,IAACK,EAAA,CACG,QAAQ,OACR,SAAU,GACV,WAAY,GACZ,SAAU,GAKV,KAAM,CAAE,KAAM,WAAY,CAAA,CAC9B,QACCC,EAAa,CAAA,UAAWZ,EAAc,QAASM,MAACO,GAAoB,CAAA,EAAI,EACxEP,EAAA,IAAAQ,EAAA,CAAY,QAASR,EAAA,IAACS,GAAmB,CAAA,EAAI,EAE9CT,EAAA,IAACU,EAAA,CACG,SAAU,GACV,SAAU,GACV,KAAM,CAAE,KAAM,UAAW,WAAY,OAAQ,EAE7C,cAAehB,CAAA,CACnB,EACAM,EAAA,IAACW,EAAA,CACG,QAAQ,WACR,YAAa,EACb,OAAQ,CAAC,KAAM,KAAM,EAAG,CAAC,EACzB,KAAK,wBACL,QAAS,GACT,YAAa,EACb,WAAY,CAAE,KAAM,UAAW,QAAS,EAAI,EAC5C,MAAO,CAEH,SAAU,YACV,KAAMZ,EACN,QAAS,GACT,SAAU,GACV,WAAY,OACZ,UAAWL,CAAA,CACf,CAAA,CACJ,CAAA,GAER,CAEJ,CAAA,CAER"}