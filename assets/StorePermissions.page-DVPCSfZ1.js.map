{"version":3,"file":"StorePermissions.page-DVPCSfZ1.js","sources":["../../src/components/charts/DoubleBarChart.tsx","../../src/features/invoicing/components/storePermissions/charts/ChartsComponent.tsx","../../src/features/invoicing/pages/StorePermissions.page.tsx"],"sourcesContent":["import { Bar, BarChart, CartesianGrid, XAxis, YAxis } from 'recharts';\r\nimport {\r\n    ChartConfig,\r\n    ChartContainer,\r\n    ChartLegend,\r\n    ChartLegendContent,\r\n    ChartTooltip,\r\n    ChartTooltipContent,\r\n} from '@/components/ui/chart';\r\n\r\ninterface Props {\r\n    chartData: unknown[];\r\n    chartConfig: ChartConfig;\r\n    barLabelColor?: string;\r\n}\r\n\r\nconst formatNumber = (value: any) => {\r\n    if (value >= 1000000000) {\r\n        return `${(value / 1000000000).toFixed(1)}B`; // Billions\r\n    } else if (value >= 1000000) {\r\n        return `${(value / 1000000).toFixed(1)}M`; // Millions\r\n    } else if (value >= 1000) {\r\n        return `${(value / 1000).toFixed(1)}K`; // Thousands\r\n    } else if (value === 0) {\r\n        return null;\r\n    }\r\n    return value; // Return the original value if less than 1000\r\n};\r\n\r\nexport default function DoubleBarChart({ chartData, chartConfig, barLabelColor = '#000' }: Props) {\r\n    return (\r\n        <div className=\"min-w-[508px] min-h-[316px]\">\r\n            {/* <CardContent> */}\r\n            <ChartContainer config={chartConfig}>\r\n                <BarChart\r\n                    margin={{\r\n                        top: 0,\r\n                        right: 0,\r\n                        left: 0,\r\n                        bottom: 0,\r\n                    }}\r\n                    accessibilityLayer\r\n                    data={chartData}\r\n                    barCategoryGap={105}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"6 6\" />\r\n                    <XAxis\r\n                        dataKey=\"days\"\r\n                        tickLine={false}\r\n                        tickMargin={10}\r\n                        axisLine={true}\r\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n                        // @ts-ignore\r\n                        // tickFormatter={(value) => chartConfig[value as keyof typeof chartConfig]?.label}\r\n                        // width={600}\r\n                        tick={{ fill: '#000000B2' }}\r\n                        tickFormatter={(value) => value.slice(0, 3)}\r\n                    />\r\n                    <ChartTooltip formatter={formatNumber} content={<ChartTooltipContent />} />\r\n                    <ChartLegend content={<ChartLegendContent />} />\r\n\r\n                    <YAxis\r\n                        axisLine={true}\r\n                        tickLine={false}\r\n                        tick={{ fill: '#6b7280', textAnchor: 'start' }}\r\n                        // width={40}\r\n                        tickFormatter={formatNumber}\r\n                    />\r\n                    <Bar\r\n                        dataKey=\"desktop\"\r\n                        strokeWidth={2}\r\n                        radius={[9999, 9999, 0, 0]}\r\n                        fill=\"var(--color-visitors)\"\r\n                        barSize={40}\r\n                        activeIndex={2}\r\n                        background={{ fill: '#D6DBED', opacity: 0.4 }}\r\n                        label={{\r\n                            // Add labels to the bars\r\n                            position: 'insideTop', // Position of the label (e.g., 'top', 'inside', 'insideStart', 'insideEnd')\r\n                            fill: barLabelColor, // Text color\r\n                            opacity: 0.7,\r\n                            fontSize: 12, // Font size\r\n                            fontWeight: 'bold', // Font weight\r\n                            formatter: formatNumber, // Apply number formatting to bar labels\r\n                        }}\r\n                    />\r\n                    <Bar\r\n                        dataKey=\"mobile\"\r\n                        strokeWidth={2}\r\n                        radius={[9999, 9999, 0, 0]}\r\n                        fill=\"var(--color-visitors)\"\r\n                        barSize={40}\r\n                        activeIndex={2}\r\n                        background={{ fill: '#D6DBED', opacity: 0.4 }}\r\n                        label={{\r\n                            // Add labels to the bars\r\n                            position: 'insideTop', // Position of the label (e.g., 'top', 'inside', 'insideStart', 'insideEnd')\r\n                            fill: barLabelColor, // Text color\r\n                            opacity: 0.7,\r\n                            fontSize: 12, // Font size\r\n                            fontWeight: 'bold', // Font weight\r\n                            formatter: formatNumber, // Apply number formatting to bar labels\r\n                        }}\r\n                    />\r\n                </BarChart>\r\n            </ChartContainer>\r\n            {/* </CardContent> */}\r\n        </div>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { apiGet } from '@/lib/axios/axios-utils';\r\nimport { endpoints } from '@/lib/axios/axios-global';\r\nimport { NewCustomersStats } from '@/features/customerRelations/types/newUsersStats.types';\r\nimport DoubleBarChart from '@/components/charts/DoubleBarChart';\r\nimport { ChartConfig } from '@/components/ui/chart';\r\nimport UnderlineHeading from '@/components/heading/UnderlineHeading';\r\n\r\nconst chartData = [\r\n    { days: 'January', desktop: 186, mobile: 80 },\r\n    { days: 'February', desktop: 305, mobile: 200 },\r\n    { days: 'March', desktop: 237, mobile: 120 },\r\n    { days: 'April', desktop: 73, mobile: 190 },\r\n    { days: 'May', desktop: 209, mobile: 130 },\r\n    { days: 'June', desktop: 214, mobile: 140 },\r\n];\r\n\r\nconst chartConfig = {\r\n    desktop: {\r\n        label: 'Desktop',\r\n        color: 'var(--chart-1)',\r\n    },\r\n    mobile: {\r\n        label: 'Mobile',\r\n        color: 'var(--chart-2)',\r\n    },\r\n} satisfies ChartConfig;\r\n\r\nexport default function ChartsComponent() {\r\n    const [customersStats, setCustomersStats] = useState<NewCustomersStats | null>(null);\r\n    const [customersStatsPeriod, setCustomersStatsPeriod] = useState('daily');\r\n\r\n    useEffect(() => {\r\n        const fetchStats = async () => {\r\n            try {\r\n                const res = await apiGet({\r\n                    endpoint: endpoints.customer.dashboardNewCustomers,\r\n                    queryParams: { period: customersStatsPeriod },\r\n                });\r\n                setCustomersStats(res.data.data);\r\n            } catch (err) {\r\n                setCustomersStats(null);\r\n            }\r\n        };\r\n        fetchStats();\r\n    }, [customersStatsPeriod]);\r\n\r\n    return (\r\n        <div className=\"shadow-[0px_2px_12px_0px_#14142B14] rounded-[0.5rem]\">\r\n            <div className=\"px-4 pt-4 flex flex-row justify-between mb-10\">\r\n                <UnderlineHeading text=\"إجمالي المرتجعات\" />\r\n                {/* <CustomSelect\r\n                    options={[\r\n                        { label: 'يومي', value: 'daily' },\r\n                        { label: 'أسبوعي ', value: 'weekly ' },\r\n                        { label: 'شهري', value: 'monthly' },\r\n                        // { label: 'سنوي', value: 'سنوي' },\r\n                    ]}\r\n                    value={customersStatsPeriod}\r\n                    onValueChange={setCustomersStatsPeriod}\r\n                    placeholder=\"القائمة\"\r\n                    width=\"min-w-[101px]\"\r\n                /> */}\r\n            </div>\r\n            <div className=\"ps-6 pb-4 flex items-center justify-center w-full\">\r\n                <DoubleBarChart chartConfig={chartConfig} chartData={chartData} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { Card } from '@/types/statistics';\r\nimport UserRemoveIcon from '@/components/icons/user/UserRemove';\r\nimport TwoUsersIcon from '@/components/icons/user/TwoUsersIcon';\r\nimport MinusUserIcon from '@/components/icons/user/MinusUserIcon';\r\nimport GroupIcon from '@/components/icons/user/GroupIcon';\r\nimport { useEffect, useState } from 'react';\r\nimport { apiGet } from '@/lib/axios/axios-utils';\r\nimport { endpoints } from '@/lib/axios/axios-global';\r\nimport { employeesStats } from '@/features/humanResources/types/employeesStats.types';\r\nimport ReturnsListStatistics from '../components/returns/ReturnsListStatistics';\r\nimport ReturnsList from '../components/returns/ReturnsList';\r\nimport ChartsComponent from '../components/storePermissions/charts/ChartsComponent';\r\n\r\nexport default function StorePermissionsPage() {\r\n    const [stats, setStats] = useState<employeesStats | null>(null);\r\n\r\n    useEffect(() => {\r\n        const fetchStats = async () => {\r\n            try {\r\n                const res = await apiGet({ endpoint: endpoints.employee.dashboard });\r\n                setStats(res.data.data);\r\n            } catch (err) {\r\n                setStats(null);\r\n            }\r\n        };\r\n        fetchStats();\r\n    }, []);\r\n\r\n    const cards: Card[] = [\r\n        { text: 'إجمالي المرتجعات', num: stats?.total_employees, percent: 12, icon: <GroupIcon /> },\r\n        { text: 'إجمالي قيمة المرتجعات', num: 35, percent: 0, icon: <UserRemoveIcon /> },\r\n        { text: 'نسبة المرتجعات', num: stats?.total_full_time, percent: -0.3, icon: <TwoUsersIcon /> },\r\n        { text: 'المرتجعات المرفوضة', num: stats?.total_part_time, percent: -0.3, icon: <MinusUserIcon /> },\r\n    ];\r\n\r\n    return (\r\n        <div className=\"w-full mt-6 mb-20\">\r\n            <ReturnsListStatistics cards={cards} />\r\n            <ChartsComponent />\r\n            <ReturnsList />\r\n        </div>\r\n    );\r\n}\r\n"],"names":["formatNumber","value","DoubleBarChart","chartData","chartConfig","barLabelColor","jsx","ChartContainer","jsxs","BarChart","CartesianGrid","XAxis","ChartTooltip","ChartTooltipContent","ChartLegend","ChartLegendContent","YAxis","Bar","ChartsComponent","customersStats","setCustomersStats","useState","customersStatsPeriod","setCustomersStatsPeriod","useEffect","res","apiGet","endpoints","UnderlineHeading","StorePermissionsPage","stats","setStats","cards","GroupIcon","UserRemoveIcon","TwoUsersIcon","MinusUserIcon","ReturnsListStatistics","ReturnsList"],"mappings":"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"}