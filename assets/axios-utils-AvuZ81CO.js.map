{"version":3,"file":"axios-utils-AvuZ81CO.js","sources":["../../src/lib/axios/axios-utils.ts"],"sourcesContent":["import axios, { AxiosResponse } from 'axios';\r\n\r\ninterface RequestOptions {\r\n    endpoint: string;\r\n    queryParams?: Record<string, string | number | boolean>;\r\n    body?: Record<string, any>;\r\n    config?: Record<string, any>; // Additional Axios config\r\n}\r\ntype TReturn<T> = Promise<AxiosResponse<T, any>>;\r\n// Helper to generate query string from params\r\nconst generateQueryString = (queryParams?: Record<string, string | number | boolean>): string => {\r\n    if (!queryParams) return '';\r\n    const query = new URLSearchParams(queryParams as Record<string, string>).toString();\r\n    return query ? `?${query}` : '';\r\n};\r\n\r\n// GET Request\r\nexport const apiGet = async <T = any>({ endpoint, queryParams, config }: RequestOptions): TReturn<T> => {\r\n    const queryString = generateQueryString(queryParams);\r\n    const response = await axios.get<T>(`${endpoint}${queryString}`, config);\r\n    return response;\r\n};\r\n\r\n// POST Request\r\nexport const apiPost = async <T = any>({ endpoint, body, queryParams, config }: RequestOptions): TReturn<T> => {\r\n    const queryString = generateQueryString(queryParams);\r\n    const response = await axios.post<T>(`${endpoint}${queryString}`, body, config);\r\n    return response;\r\n};\r\n\r\n// PUT Request\r\nexport const apiPut = async <T = any>({ endpoint, body, queryParams, config }: RequestOptions): TReturn<T> => {\r\n    const queryString = generateQueryString(queryParams);\r\n    const response = await axios.put<T>(`${endpoint}${queryString}`, body, config);\r\n    return response;\r\n};\r\n\r\n// PATCH Request\r\nexport const apiPatch = async <T = any>({ endpoint, body, queryParams, config }: RequestOptions): TReturn<T> => {\r\n    const queryString = generateQueryString(queryParams);\r\n    const response = await axios.patch<T>(`${endpoint}${queryString}`, body, config);\r\n    return response;\r\n};\r\n\r\n// DELETE Request\r\nexport const apiDelete = async <T = any>({ endpoint, queryParams, config }: RequestOptions): TReturn<T> => {\r\n    const queryString = generateQueryString(queryParams);\r\n    const response = await axios.delete<T>(`${endpoint}${queryString}`, config);\r\n    return response;\r\n};\r\n"],"names":["generateQueryString","queryParams","query","apiGet","endpoint","config","queryString","axios","apiPost","body","apiDelete"],"mappings":"wCAUA,MAAMA,EAAuBC,GAAoE,CACzF,GAAA,CAACA,EAAoB,MAAA,GACzB,MAAMC,EAAQ,IAAI,gBAAgBD,CAAqC,EAAE,SAAS,EAC3E,OAAAC,EAAQ,IAAIA,CAAK,GAAK,EACjC,EAGaC,EAAS,MAAgB,CAAE,SAAAC,EAAU,YAAAH,EAAa,OAAAI,KAAyC,CAC9F,MAAAC,EAAcN,EAAoBC,CAAW,EAE5C,OADU,MAAMM,EAAM,IAAO,GAAGH,CAAQ,GAAGE,CAAW,GAAID,CAAM,CAE3E,EAGaG,EAAU,MAAgB,CAAE,SAAAJ,EAAU,KAAAK,EAAM,YAAAR,EAAa,OAAAI,KAAyC,CACrG,MAAAC,EAAcN,EAAoBC,CAAW,EAE5C,OADU,MAAMM,EAAM,KAAQ,GAAGH,CAAQ,GAAGE,CAAW,GAAIG,EAAMJ,CAAM,CAElF,EAiBaK,EAAY,MAAgB,CAAE,SAAAN,EAAU,YAAAH,EAAa,OAAAI,KAAyC,CACjG,MAAAC,EAAcN,EAAoBC,CAAW,EAE5C,OADU,MAAMM,EAAM,OAAU,GAAGH,CAAQ,GAAGE,CAAW,GAAID,CAAM,CAE9E"}